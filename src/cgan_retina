from pyexpat import model
from gan import CGAN
from mapper import RetinalImages
from tensorflow.keras.models import Model
from tensorflow.keras.layers import Input
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.datasets import fashion_mnist
from sklearn.utils import shuffle
from imutils import build_montages
import numpy as np
import argparse
import cv2
import os
from keras.utils.vis_utils import plot_model

#GAN TRAINING LOOP: https://www.pyimagesearch.com/2020/11/16/gans-with-keras-and-tensorflow/



# D.summary()
train = RetinalImages.retinal_data
img_shape = (train.image_shape[0], train.image_shape[1], train.image_shape[2])
# train = train.astype('float32')
# train = (train-127.5)/127.5
# print(train.image_shape)
print (train.image_shape)
D = CGAN.discriminator(inputShape=train.image_shape)

def train_disc(model: CGAN.discriminator, data, iter=20, n_batch=32):
    for i in range(iter):
        xreal, yreal = CGAN.gen_real(data, int(n_batch/2))
        _, D_real = model.train_on_batch(xreal, yreal)
        xfake, yfake = CGAN.gen_noise(img_shape[0], img_shape[1], img_shape[2], int(n_batch/2))
        _, D_noise = model.train_on_batch(xfake, yfake)
        print('>%d real=%.0f%% fake=%.0f%%' % (i+1, D_real*100, D_noise*100))

train_disc(D, train)

